(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{448:function(t,s,a){"use strict";a.r(s);var e=a(1),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"客户端、授权器与安全配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#客户端、授权器与安全配置"}},[t._v("#")]),t._v(" 客户端、授权器与安全配置")]),t._v(" "),s("p",[t._v("在之前的示例中，我们直接对接 pac4j，并让项目运行起来了。在 "),s("code",[t._v("Pac4jConfig")]),t._v(" 中，我们最先的配置的即是客户端 Client。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GitHubClient")]),t._v(" gitHubClient "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GitHubClient")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a85f19ea0f51face127a"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"84bf0695ea2a62674b8d5961a02a4c793bf23e2a"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GiteeClient")]),t._v(" giteeClient "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GiteeClient")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"da28980047eb2c732b8bcee4be567c6a4f38c6459587063f2607084c9c33b957"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"4cd81eac1dae28b698044ed5b55e2580da94aca7d872e11e5b47d6c8a3b0a26d"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("代码中我们配置了两个客户端 "),s("code",[t._v("GitHubClient")]),t._v("、"),s("code",[t._v("GiteeClient")]),t._v("。我们为客户端配置了其对应的协议所需要参数，如代码中所使用的 OAuth2.0 协议的 "),s("code",[t._v("key")]),t._v(" 和 "),s("code",[t._v("secret")]),t._v("。而对应的服务端的协议相关 API 则封装在客户端的相关实现类中。")]),t._v(" "),s("p",[t._v("然后我们需要将客户端添加到安全配置 "),s("code",[t._v("Config")]),t._v(" 中，如下：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Clients")]),t._v(" clients "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Clients")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://localhost:8888/callback"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" gitHubClient"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" giteeClient"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Config")]),t._v(" config "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Config")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("clients"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("我们还可以为安全配置添加认证器 "),s("code",[t._v("Authorizer")]),t._v("，用于进一步细化认证配置，我们没有添加，使用默认的 "),s("code",[t._v("csrfCheck")]),t._v("。")]),t._v(" "),s("p",[t._v("最后再依据不同的认证框架，将 "),s("code",[t._v("Config")]),t._v(" 配置使用，如下：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("configure")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HttpSecurity")]),t._v(" http"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SecurityFilter")]),t._v(" filter "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SecurityFilter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"GiteeClient"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            http"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("antMatcher")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/login/gitee"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addFilterBefore")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("filter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BasicAuthenticationFilter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sessionManagement")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sessionCreationPolicy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SessionCreationPolicy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ALWAYS")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("通过这几个配置就可以将整个认证对接起来。")]),t._v(" "),s("h2",{attrs:{id:"匹配器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#匹配器"}},[t._v("#")]),t._v(" 匹配器")]),t._v(" "),s("p",[t._v("匹配器 "),s("code",[t._v("Matcher")]),t._v(" 可以用来做细化扩展，比如我们使用的 "),s("code",[t._v("SecurityFilter")]),t._v("，如下：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SecurityFilter")]),t._v(" filter "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SecurityFilter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"GiteeClient"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("这个过滤器默认不会对请求的 URL 进行过滤，如果想细化控制，比如只针对某些 URL 生效，可以通过向 "),s("code",[t._v("SecurityFilter")]),t._v(" 添加自定义 "),s("code",[t._v("Matcher")]),t._v(" 来实现。当然，在特定的框架中，可以使用框架自己的特性来实现匹配，比如我们使用的 "),s("code",[t._v("Spring Security")]),t._v(" 中，可以直接在 "),s("code",[t._v("HttpSecurity")]),t._v(" 声明中配置。")]),t._v(" "),s("h2",{attrs:{id:"profile"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#profile"}},[t._v("#")]),t._v(" Profile")]),t._v(" "),s("p",[t._v("当 pac4j 成功认证用户时，将从认证提供者检索其数据，并构建用户配置文件，即 profile。用户配置文件包括：")]),t._v(" "),s("ul",[s("li",[t._v("一个标识符 （getId()）")]),t._v(" "),s("li",[t._v("属性（getAttributes()、 getAttribute(name)）")]),t._v(" "),s("li",[t._v("认证相关属性 （getAuthenticationAttributes()、getAuthenticationAttribute(name)）")]),t._v(" "),s("li",[t._v("角色 （getRoles()）")]),t._v(" "),s("li",[t._v("权限 （getPermissions()）")]),t._v(" "),s("li",[t._v("客户端名称（getClientName()）")]),t._v(" "),s("li",[t._v("记住我 （isRemembered()）")]),t._v(" "),s("li",[t._v("一个关联标识符（getLinkedId()）")])]),t._v(" "),s("p",[t._v("每个客户端会自己定义一个对应的配置文件，这样当客户端获取到服务端响应的用户数据后，可以保存下来供项目代码使用。")]),t._v(" "),s("h2",{attrs:{id:"web-context、session-store"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#web-context、session-store"}},[t._v("#")]),t._v(" Web Context、Session Store")]),t._v(" "),s("p",[t._v("Web 上下文、会话存储，是比较全局的配置， 一般不需要在配置时指定。")]),t._v(" "),s("h2",{attrs:{id:"结语"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#结语"}},[t._v("#")]),t._v(" 结语")]),t._v(" "),s("p",[t._v("以上，就是 pac4j 的新手入门，通过这些简单的介绍，了解了 pac4j 的一些基础概念，并能基于 Spring Security 框架对接上 pac4j，还能照着现有的客户端实现，自定义一个客户端的实现。而实现一个自定义客户端，会是实际工作中最常做的事情。")])])}),[],!1,null,null,null);s.default=n.exports}}]);