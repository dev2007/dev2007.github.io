(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{420:function(e,a,s){"use strict";s.r(a);var t=s(1),r=Object(t.a)({},(function(){var e=this,a=e._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("p",[e._v("上一篇中，我们按照官方文档直接体验了对 Elasticsearch 的安装，以及安装成功的校验。本篇我们按照官方对各种平台的安装方式，学习一下Elasticsearch 安装相关的基础信息，如目录结构，常见参数等。")]),e._v(" "),a("blockquote",[a("p",[a("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/install-elasticsearch.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Installing Elasticsearch"),a("OutboundLink")],1),e._v(" "),a("a",{attrs:{href:"https://elasticsearch.bookhub.tech/#/setup/install",target:"_blank",rel:"noopener noreferrer"}},[e._v("安装 Elasticsearch"),a("OutboundLink")],1)])]),e._v(" "),a("p",[e._v("在文档中，分别对 Linux 和 MacOS 上使用压缩包、在 Windows 上使用 "),a("code",[e._v(".zip")]),e._v(" 包、单独的 Debian 包、单独的 RPM 包、使用 Docker 等方式安装 Elasticsearch 分别进行了介绍。")]),e._v(" "),a("p",[e._v("以上各种方式都具有各自独立的操作方式，但最终本质都是将 Elasticsearch 运行起来。")]),e._v(" "),a("p",[e._v("针对 Windows 环境，官方提醒：")]),e._v(" "),a("blockquote",[a("p",[e._v("在 Windows 上，Elasticsearch 机器学习特性需要 Microsoft 通用 C 运行时库。它内置于 Windows 10、Windows Server 2016 和更高版本的 Windows 中。对于老版本的 Windows，它可以通过 Windows Update 安装，也可以从"),a("a",{attrs:{href:"https://support.microsoft.com/en-us/help/2999226/update-for-universal-c-runtime-in-windows",target:"_blank",rel:"noopener noreferrer"}},[e._v("独立下载"),a("OutboundLink")],1),e._v("安装。如果你不能安装 Microsoft 通用 C 运行时库，禁用机器学习特性你也能使用 Elasticsearch 的其他特性。")])]),e._v(" "),a("p",[e._v("也就是说，Windows 环境上，系统版本太低，不用机器学习，Elasticsearch也能用基本功能。")]),e._v(" "),a("h2",{attrs:{id:"关于目录结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关于目录结构"}},[e._v("#")]),e._v(" 关于目录结构")]),e._v(" "),a("p",[e._v("不论是使用哪种安装形式，Elasticsearch 的目录结构基本是一致的。示例如下：")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",[e._v("目录名称")]),e._v(" "),a("th",[e._v("描述")]),e._v(" "),a("th",[e._v("默认位置")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[e._v("根目录")]),e._v(" "),a("td",[e._v("根目录")]),e._v(" "),a("td",[e._v("${es_home}")])]),e._v(" "),a("tr",[a("td",[e._v("bin")]),e._v(" "),a("td",[e._v("脚本目录，包括启动脚本 "),a("code",[e._v("elasticsearch")]),e._v(" 和安装插件脚本 "),a("code",[e._v("elasticsearch-plugin")])]),e._v(" "),a("td",[e._v("${es_home}/bin")])]),e._v(" "),a("tr",[a("td",[e._v("conf")]),e._v(" "),a("td",[e._v("配置文件目录，包括 "),a("code",[e._v("elasticsearch.yml")])]),e._v(" "),a("td",[e._v("${es_home}/conf")])]),e._v(" "),a("tr",[a("td",[e._v("data")]),e._v(" "),a("td",[e._v("索引和数据文件目录，可以有多个")]),e._v(" "),a("td",[e._v("${es_home}/data")])]),e._v(" "),a("tr",[a("td",[e._v("logs")]),e._v(" "),a("td",[e._v("elasticsearch 日志目录")]),e._v(" "),a("td",[e._v("${es_home}/logs")])]),e._v(" "),a("tr",[a("td",[e._v("plugins")]),e._v(" "),a("td",[e._v("插件目录")]),e._v(" "),a("td",[e._v("${es_home}/plugins")])])])]),e._v(" "),a("p",[e._v("Elasticsearch 是 java 开发的程序，Elasticsearch 压缩包还贴心的自带了一个 JDK，在目录 jdk中。可以使用本机的 JDK 运行 Elasticsearch，也可用自带的 JDK。而适用的 JDK 版本，可以看"),a("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/setup.html#jvm-version",target:"_blank",rel:"noopener noreferrer"}},[e._v("官方介绍"),a("OutboundLink")],1),e._v("。")]),e._v(" "),a("p",[e._v("另外，还有一个 "),a("code",[e._v("repo")]),e._v(" 目录，它是共享文件系统仓库位置，可以配置多个位置。文件系统仓库可以放在指定的任何目录的任何子目录中。可以通过参数指定。")]),e._v(" "),a("p",[e._v("在以上表格中，我们可以看到，启动 Elasticsearch 的脚本放在 "),a("code",[e._v("bin")]),e._v(" 目录中，所以如果是压缩包解压出来的 Elasticsearch，我们进入此目录，执行启动脚本就可启动 Elasticsearh。而其他形式，如 RPM 或者 docker 的形式，它们的启动也是调用此目录中的启动脚本。")]),e._v(" "),a("p",[e._v("而 Elasticsearch 启动需要的配置信息，来源于 "),a("code",[e._v("conf")]),e._v(" 目录中的 "),a("code",[e._v("elasticsearch.yml")]),e._v(" 文件，如果有必要，可以直接修改此配置文件中的配置。当然也可以在执行启动脚本时，以参数的形式传递进去。")]),e._v(" "),a("blockquote",[a("p",[e._v("对 Windows 下使用 "),a("code",[e._v(".zip")]),e._v(" 安装 Elasticsearch，官方文档中建议：任意集群范围设置（如 "),a("code",[e._v("cluster.name")]),e._v("）应该添加到 "),a("code",[e._v("elasticsearch.yml")]),e._v(" 配置文件中，而任何节点特定设置，如 "),a("code",[e._v("node.name")]),e._v("，应该在命令行中指定。")])]),e._v(" "),a("p",[e._v("也就是说通用的配置写入配置文件中，动态的配置在执行时指定即可。")]),e._v(" "),a("p",[e._v("Elasticsearch 还可以使用密钥库进行保护，启动它时会提示输入密码。")]),e._v(" "),a("h2",{attrs:{id:"关于-docker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关于-docker"}},[e._v("#")]),e._v(" 关于 Docker")]),e._v(" "),a("p",[e._v("现在我们用得很多的是 Docker 环境，用 Docker 镜像启动 Elasticsearch 的话，需要注意一些特别的事项。")]),e._v(" "),a("p",[e._v("如果想启一个单节点的集群来测试，那必须要指定参数来绕过检查：")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v(" run "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-p")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("9200")]),e._v(":9200 "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-p")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("9300")]),e._v(":9300 "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-e")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"discovery.type=single-node"')]),e._v(" docker.elastic.co/elasticsearch/elasticsearch:7.11.2\n")])])]),a("p",[e._v("如果要启动一个三节点集群，可以用 Docker Compose 或者 K8S。")]),e._v(" "),a("p",[e._v("环境变量 "),a("code",[e._v("ES_JAVA_OPTS")]),e._v(" 中可以指定 Elasticsearch 使用的 JVM 堆大小，但是并不推荐在生产环境这样设置。默认情况下，Elasticsearch 基于节点的角色和节点容器总可用内存，自动地设置 JVM 堆大小。对大多数生产环境，官方推荐这种默认大小设置。")]),e._v(" "),a("p",[e._v("当然一定要手工设置也是可以的。在生产环境手工设置堆大小，绑定挂载包含了你期望的"),a("a",{attrs:{href:"http://localhost:3000/#/setup/config/advanced?id=%E8%AE%BE%E7%BD%AE-jvm-%E5%A0%86%E5%A4%A7%E5%B0%8F",target:"_blank",rel:"noopener noreferrer"}},[e._v("堆大小"),a("OutboundLink")],1),e._v("设置的 "),a("a",{attrs:{href:"http://localhost:3000/#/setup/config/jvm",target:"_blank",rel:"noopener noreferrer"}},[e._v("JVM 选项"),a("OutboundLink")],1),e._v("文件（在 "),a("code",[e._v("/usr/share/elasticsearch/config/jvm.options.d")]),e._v("中）。")]),e._v(" "),a("p",[e._v("还要注意，在生产环境使用，"),a("code",[e._v("vm.max_map_count")]),e._v(" 内核设置必须至少为 "),a("code",[e._v("262144")]),e._v("。在 Linux 环境中，"),a("code",[e._v("vm.max_map_count")]),e._v(" 应该永久设置在 "),a("code",[e._v("/etc/sysctl.conf")]),e._v("：")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("grep")]),e._v(" vm.max_map_count /etc/sysctl.conf\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("vm.max_map_count")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("262144")]),e._v("\n")])])]),a("p",[e._v("在运行的系统中应用此配置，执行：")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sysctl")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-w")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("vm.max_map_count")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("262144")]),e._v("\n")])])]),a("h3",{attrs:{id:"关于-docker-中的用户"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关于-docker-中的用户"}},[e._v("#")]),e._v(" 关于 Docker 中的用户")]),e._v(" "),a("p",[e._v("默认情况下，Elasticsearch 通过 uid:gid "),a("code",[e._v("1000:0")]),e._v("，以用户 "),a("code",[e._v("elasticsearch")]),e._v(" 在容器中运行。所以要注意这个用户的相关目录读写权限，以避免出现用户权限不足，导致的 Elasticsearch 无法正常运行。")]),e._v(" "),a("p",[e._v("特别要注意，使用 Docker 时，我们会向容器挂载本地目录、文件，或者存储中的目录、文件，就需要用户对这些目录、文件有读写权限。如，对配置（"),a("code",[e._v("config")]),e._v("）、数据（"),a("code",[e._v("data")]),e._v("）、日志（"),a("code",[e._v("logs")]),e._v("）目录需要有写权限。")]),e._v(" "),a("p",[e._v("比较方便的方法是直接对本地目录 gid "),a("code",[e._v("0")]),e._v(" 分配组访问权限。")]),e._v(" "),a("p",[e._v("你也可以使用自定义 UID 和 GID 来运行 Elasticsearch 容器。除非你绑定挂载每个 "),a("code",[e._v("config")]),e._v("、"),a("code",[e._v("data")]),e._v(" 和 "),a("code",[e._v("logs")]),e._v(" 目录，否则必须为 "),a("code",[e._v("docker run")]),e._v(" 传递命令行选项 "),a("code",[e._v("--group-add 0")]),e._v("。这样可以确保运行 Elasticsearch 的用户也是容器 "),a("code",[e._v("root")]),e._v(" （GID 0）组的成员。")]),e._v(" "),a("p",[e._v("还可以通过环境变量 "),a("code",[e._v("TAKE_FILE_OWNERSHIP")]),e._v(" 强制容器更改用于数据和日志目录的绑定挂载的所有权。当你这样做的时候，它们将属于 uid:gid "),a("code",[e._v("1000:0")]),e._v("，它提供了 Elasticsearch 进程所需的读写访问权限。")]),e._v(" "),a("h3",{attrs:{id:"关于-docker-文件挂载和环境变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关于-docker-文件挂载和环境变量"}},[e._v("#")]),e._v(" 关于 Docker 文件挂载和环境变量")]),e._v(" "),a("p",[e._v("在 Docker 中运行时， Elasticsearch 配置文件从 "),a("code",[e._v("/usr/share/elasticsearch/config/")]),e._v("加载。为了使用自定义配置文件，你要绑定挂载文件到镜像中的配置文件上。")]),e._v(" "),a("p",[e._v("而如果想通过读取文件中的值对环境变量设置值，需要给"),a("strong",[e._v("环境变量名字加上后缀 "),a("code",[e._v("_FILE")])]),e._v("。如，为了从文件设置 Elasticsearch 的启动密码，你可以绑定挂载这个文件，然后在挂载路径中设置环境变量"),a("code",[e._v("ELASTIC_PASSWORD_FILE")]),e._v("。如果你挂载的密码文件为 "),a("code",[e._v("/run/secrets/bootstrapPassword.txt")]),e._v(",如下指定：")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-e")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("ELASTIC_PASSWORD_FILE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/run/secrets/bootstrapPassword.txt\n")])])]),a("p",[e._v("如果使用自定义配置文件，并将其绑定挂载到 Docker 镜像的相应文件上。例如，使用 "),a("code",[e._v("docker run")]),e._v(" 绑定挂载 "),a("code",[e._v("custom_elasticsearch.yml")]),e._v("，如下：")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-v")]),e._v(" full_path_to/custom_elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml\n")])])]),a("p",[e._v("以上就是针对各种环境安装使用 Elasticsearch 需要注意的一些很特别的点的碎碎念。更多的文档资料，可以查看 "),a("a",{attrs:{href:"https://elasticsearch.bookhub.tech/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Elasticsearch 中文文档"),a("OutboundLink")],1),e._v("。")]),e._v(" "),a("p",[e._v("接下来，我们将先跳过官方文档中关于如何配置 Elasticsearch 的更多的讲解，直接进入对 Elasticsearch 相关模块的讲解，并结合 Http API 进行学习。请关注后续文章。")])])}),[],!1,null,null,null);a.default=r.exports}}]);