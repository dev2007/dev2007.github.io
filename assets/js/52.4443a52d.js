(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{423:function(t,s,e){"use strict";e.r(s);var a=e(1),_=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("在上一篇中，我们总结了与索引属性相关的 API。本篇中，我们将介绍一些特殊的管理 API，包括索引模板 API，对索引的监控和状态管理 API，还有特别的悬空索引。")]),t._v(" "),s("p",[t._v("以下全部 API 可以参阅"),s("a",{attrs:{href:"https://elasticsearch.bookhub.tech/#/rest_apis/index_apis/index_apis",target:"_blank",rel:"noopener noreferrer"}},[t._v("索引 API"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"索引模板"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#索引模板"}},[t._v("#")]),t._v(" 索引模板")]),t._v(" "),s("p",[t._v("索引模板自动为新索引应用设置、映射以及别名。换句话讲，就是设置了模板的话，在创建新索引时，如果新索引符合模板的规则，那么新索引会自动应用模板中定义的索引相关的设置，不用自己再为每个新索引指定。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("创建或更新模板")]),t._v(" "),s("p",[s("code",[t._v("PUT /_index_template/<index-template>")])]),t._v(" "),s("p",[t._v("使用 "),s("code",[t._v("PUT")]),t._v(" 方法，API 中需要在最后指定模板名字。而请求体中可以指定的参数比较多，示例如下：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("PUT /_index_template/template_1\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"index_patterns"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"te*"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(",\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"priority"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(",\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"template"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"settings"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"number_of_shards"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[s("code",[t._v("index_patterns")]),t._v(" 必填，且最重要的。代表匹配此模板的新索引。只要按此规则匹配上了，就会应用这个模板。")]),t._v(" "),s("li",[s("code",[t._v("priority")]),t._v(" 可选，代表模板的优先级，默认为最低级 0。要注意的是，如果多个模板都匹配上新索引了，那么会使用优先级最高的模板。而且不能创建内容一样，优先级也一样的模板。")]),t._v(" "),s("li",[s("code",[t._v("template")]),t._v(" 可选，代表所有应用于索引的属性配置。比如包含 "),s("code",[t._v("aliases")]),t._v("、"),s("code",[t._v("mappings")]),t._v(" 和 "),s("code",[t._v("settings")]),t._v("。")]),t._v(" "),s("li",[s("code",[t._v("composed_of")]),t._v(" 可选，可以选择组成索引模板的组件模板名字，以组件模板来组合索引模板。")])])]),t._v(" "),s("li",[s("p",[t._v("获取索引模板")]),t._v(" "),s("p",[s("code",[t._v("GET /_index_template/<index-template>")])]),t._v(" "),s("p",[t._v("使用 "),s("code",[t._v("GET")]),t._v(" 方法。API 中带上模板名字，名字中还可以使用星号作为通配符。")])]),t._v(" "),s("li",[s("p",[t._v("删除索引模板")]),t._v(" "),s("p",[s("code",[t._v("DELETE /_index_template/<index-template>")])]),t._v(" "),s("p",[t._v("使用 "),s("code",[t._v("DELETE")]),t._v(" 方法。API 中带上模板名字，还可以用逗号分隔多个名字。但需要注意，如果用多个名字的话，就不能用星号通配符。")])]),t._v(" "),s("li",[s("p",[t._v("创建或更新组件模板")]),t._v(" "),s("p",[t._v("组件模板是比索引模板还小的模板，可用来组成索引模板。")]),t._v(" "),s("p",[s("code",[t._v("PUT /_component_template/<component-template>")])]),t._v(" "),s("p",[t._v("使用 "),s("code",[t._v("PUT")]),t._v(" 方法。API 中带上组件模板名字。示例如下：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("PUT _component_template/template_1\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"template"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"settings"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"number_of_shards"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mappings"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"_source"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"enabled"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"properties"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"host_name"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"type"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"keyword"')]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"created_at"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"type"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"date"')]),t._v(",\n          "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"format"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"EEE MMM dd HH:mm:ss Z yyyy"')]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[s("code",[t._v("template")]),t._v(" 必需的。代表索引相关的属性配置，包含 "),s("code",[t._v("aliases")]),t._v("、"),s("code",[t._v("mappings")]),t._v(" 和 "),s("code",[t._v("settings")]),t._v("。")])])]),t._v(" "),s("li",[s("p",[t._v("获取组件模板")]),t._v(" "),s("p",[s("code",[t._v("GET /_component_template/<component-template>")])]),t._v(" "),s("p",[t._v("使用 "),s("code",[t._v("GET")]),t._v(" 方法。API 中带上组件模板名字，可以使用星号通配符。如果完全不写组件模板名字，就会查询出所有组件模板。")])]),t._v(" "),s("li",[s("p",[t._v("删除组件模板")]),t._v(" "),s("p",[s("code",[t._v("DELETE /_component_template/<component-template>")])]),t._v(" "),s("p",[t._v("使用 "),s("code",[t._v("DELETE")]),t._v(" 方法。API 中带上组件模板名字，可以用逗号分隔多个名字或者使用通配符。")])]),t._v(" "),s("li",[s("p",[t._v("模拟索引")]),t._v(" "),s("p",[s("em",[t._v("实验性API")]),t._v(" 用来模拟如果创建一个新索引，应用索引模板后的索引配置会是哪些。")]),t._v(" "),s("p",[s("code",[t._v("POST /_index_template/_simulate_index/<index>")])]),t._v(" "),s("p",[t._v("使用 "),s("code",[t._v("POST")]),t._v(" 方法。API 中还要带上模拟的索引的名字。要注意，虽然是 "),s("code",[t._v("POST")]),t._v(" 方法，但是并不需要传递请求体数据。")])]),t._v(" "),s("li",[s("p",[t._v("模拟索引模板\n"),s("code",[t._v("POST /_index_template/_simulate/<index-template>")])]),t._v(" "),s("p",[t._v("使用 "),s("code",[t._v("POST")]),t._v(" 方法。API 中带上索引模板的名字。请求体和索引模板一样。")])])]),t._v(" "),s("p",[t._v("以上和模板相关的 API，我们可以看到，Elasticsearch 提供了索引模板增删查改相关的接口，还为索引模板提供了更细粒度的组件模板，让索引模板组合更灵活。更进一步，还提供了模拟接口，可以模拟验证创建索引和模板时生成的配置的具体情况。")]),t._v(" "),s("h2",{attrs:{id:"监测"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#监测"}},[t._v("#")]),t._v(" 监测")]),t._v(" "),s("p",[t._v("监控相关的 API，主要用来统计当前索引的一些信息。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("索引统计")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("GET /<target>/_stats/<index-metric>\nGET /<target>/_stats\nGET /_stats\n")])])]),s("p",[t._v("使用 "),s("code",[t._v("GET")]),t._v(" 方法。三种请求形式中，前后两个参数都是可选的。")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("<target>")]),t._v(" 可选，代表索引的名字，可以不填此参数，或者用 "),s("code",[t._v("*")]),t._v(" 、 "),s("code",[t._v("_all")]),t._v("，代表查所有索引的数据。")]),t._v(" "),s("li",[s("code",[t._v("<index-metric>")]),t._v("可选，要查询的指标值，包括 "),s("code",[t._v("_all")]),t._v("、"),s("code",[t._v("completion")]),t._v("、"),s("code",[t._v("docs")]),t._v("、"),s("code",[t._v("fielddata")]),t._v("、"),s("code",[t._v("flush")]),t._v("、"),s("code",[t._v("get")]),t._v("、"),s("code",[t._v("indexing")]),t._v("、"),s("code",[t._v("merge")]),t._v("、"),s("code",[t._v("query_cache")]),t._v("、"),s("code",[t._v("query_cache")]),t._v("、"),s("code",[t._v("refresh")]),t._v("、"),s("code",[t._v("request_cache")]),t._v("、"),s("code",[t._v("search")]),t._v("、"),s("code",[t._v("segments")]),t._v("、"),s("code",[t._v("store")]),t._v("、"),s("code",[t._v("suggest``translog")]),t._v("、"),s("code",[t._v("warmer")]),t._v("。")])]),t._v(" "),s("p",[t._v("具体想用哪些参数相关的统计信息，在用的时候再看文档查看即可，参阅"),s("a",{attrs:{href:"https://elasticsearch.bookhub.tech/#/rest_apis/index_apis/index_stats",target:"_blank",rel:"noopener noreferrer"}},[t._v("索引统计"),s("OutboundLink")],1),t._v(" 。")])]),t._v(" "),s("li",[s("p",[t._v("索引段")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("GET /<target>/_segments\nGET /_segments\n")])])]),s("p",[t._v("使用 "),s("code",[t._v("GET")]),t._v(" 方法。两种请求形式其实也只是一种。API 中的参数代表索引名称，如果忽略就代表所有索引。")]),t._v(" "),s("p",[t._v("此 API 用于统计索引基于 Lucene 的索引段。")])]),t._v(" "),s("li",[s("p",[t._v("索引恢复")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("GET /<target>/_recovery\nGET /_recovery\n")])])]),s("p",[t._v("使用 "),s("code",[t._v("GET")]),t._v(" 方法。两种请求形式是一种。API 中的参数代表索引名称，忽略则代表所有索引。")]),t._v(" "),s("p",[t._v("此 API 用于获取正在进行和已完成的分片恢复的信息。")])]),t._v(" "),s("li",[s("p",[t._v("索引分片存储")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("GET /<target>/_shard_stores\nGET /_shard_stores\n")])])]),s("p",[t._v("使用 "),s("code",[t._v("GET")]),t._v(" 方法。两种请求形式其实也是一种，同上面一样，API 中的参数代表索引名称，忽略则代表所有索引。")]),t._v(" "),s("p",[t._v("此 API 获取索引中分片的存储信息。")]),t._v(" "),s("p",[t._v("以上关于监测的 API，可以看到，主要是用于对索引的相关信息进行统计或查询，以了解当前索引的一个运行、占用相关的信息，主要用于常规的监控、检查等用途。")])])]),t._v(" "),s("h2",{attrs:{id:"状态管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#状态管理"}},[t._v("#")]),t._v(" 状态管理")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("清除缓存")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("POST /<target>/_cache/clear\nPOST /_cache/clear\n")])])]),s("p",[t._v("使用 "),s("code",[t._v("POST")]),t._v(" 方法。两种请求形式一致。API 中参数代表索引名称，忽略则代表所有索引。")]),t._v(" "),s("p",[t._v("此 API 用于清除索引的缓存。")])]),t._v(" "),s("li",[s("p",[t._v("刷新")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("POST <target>/_refresh\nGET <target>/_refresh\nPOST /_refresh\nGET /_refresh\n")])])]),s("p",[t._v("使用 "),s("code",[t._v("GET")]),t._v(" 或者 "),s("code",[t._v("POST")]),t._v(" 方法。API 中参数代表索引名称，忽略则代表所有索引。")]),t._v(" "),s("p",[t._v("此 API 进行刷新后，可以使最近对一个或多个索引执行的操作可用于搜索。意思就是说如果你对索引做过一些操作，导致了它的数据变更或者属性变更，后台是需要一定时间才会将变更生效。在生效前，如果你执行搜索，这些变更是不会在搜索中被发现的，然后你想让这些变更立即生效，那就可以执行此 API 让 Elasticsearch 将这些变更立即生效。")]),t._v(" "),s("p",[t._v("但这里，有一个矛盾的地方是，刷新是一个资源密集型操作，Elasticsearch 本身会按配置进行定时刷新，且刷新操作还是异步的。所以官方更多是建议在操作后添加刷新等待的参数 "),s("code",[t._v("refresh=wait_for")]),t._v("。")])]),t._v(" "),s("li",[s("p",[t._v("冲刷")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("POST /<target>/_flushGET /<target>/_flushPOST /_flushGET /_flush\n")])])]),s("p",[t._v("使用 "),s("code",[t._v("GET")]),t._v(" 或 "),s("code",[t._v("POST")]),t._v(" 方法。API 中参数代表索引名称，忽略则代表所有索引。")]),t._v(" "),s("p",[t._v("此 API 进行冲刷后，确保索引在事务日志中的数据永久存储在 Lucene 中。从英文来看，刷新的"),s("code",[t._v("refresh")]),t._v("和 冲刷的 "),s("code",[t._v("flush")]),t._v("，中文都有刷新的含义。二者在 API 中的语义区别是："),s("strong",[t._v("刷新")]),t._v("是把操作变更，更新到 Elasticsearch 中，这个时候可能还存储在事务日志中，但可被搜索获取到；而"),s("strong",[t._v("冲刷")]),t._v("操作，则是把数据真实的永久存储到底层的 Lucene 中。")])]),t._v(" "),s("li",[s("p",[t._v("同步冲刷")]),t._v(" "),s("p",[t._v("7.6版本已废弃了，8.0将移除，看一眼就行了。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("POST /<index>/_flush/syncedGET /<index>/_flush/syncedPOST /_flush/syncedGET /_flush/synced\n")])])])]),t._v(" "),s("li",[s("p",[t._v("强制合并")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("POST /<target>/_forcemergePOST /_forcemerge\n")])])]),s("p",[t._v("使用 "),s("code",[t._v("POST")]),t._v(" 方法。API 中参数代表索引名字，忽略或者传递"),s("code",[t._v("*")]),t._v("、"),s("code",[t._v("_all")]),t._v(" 代表所有索引。")]),t._v(" "),s("p",[t._v("此 API 可以将索引的分片合并在一起，减少片段数，释放被删除文档使用的空间。实际上，官方提到强制合并对于管理数据流的旧备份索引和基于时间的索引非常有用。")])])]),t._v(" "),s("p",[t._v("以上 API 主要用于对索引的状态管理，人为的将索引的数据所在的状态、存储位置进行更新。")]),t._v(" "),s("h2",{attrs:{id:"悬空索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#悬空索引"}},[t._v("#")]),t._v(" 悬空索引")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("列出悬空索引")]),t._v(" "),s("p",[s("code",[t._v("GET /_dangling")])]),t._v(" "),s("p",[t._v("使用 "),s("code",[t._v("GET")]),t._v(" 方法。将所有悬空的索引列出。悬空索引是指，当前遇到的集群状态中缺少的索引数据，这些索引就会被认为悬空。要恢复的他们的话，可以使用下面的导入，如果不需要他们了，可以使用下面的删除。")])]),t._v(" "),s("li",[s("p",[t._v("导入悬空索引")]),t._v(" "),s("p",[s("code",[t._v("POST /_dangling/<index-uuid>?accept_data_loss=true")])]),t._v(" "),s("p",[t._v("使用 "),s("code",[t._v("POST")]),t._v(" 方法。API 中参数是必填的，表示要导入的索引的 UUID。")])]),t._v(" "),s("li",[s("p",[t._v("删除悬空索引")]),t._v(" "),s("p",[s("code",[t._v("DELETE /_dangling/<index-uuid>?accept_data_loss=true")])]),t._v(" "),s("p",[t._v("使用 "),s("code",[t._v("DELETE")]),t._v(" 方法。API 中的参数必填的，表示要删除的索引的 UUID。")])])]),t._v(" "),s("p",[t._v("本篇所介绍的 API 主要用于对索引本身状态、存储的相关管理，一般使用 Elasticsearch 的情况下，我们可能较少使用这些 API。当开始进阶时，可能才会慢慢使用这些 API 来辅助我们对 Elasticsearch 的高级使用。")]),t._v(" "),s("p",[t._v("通过连续三篇的介绍，我们初步了解了关于索引的一些 API，包括对索引的管理（增删查改），对索引相关属性的介绍（映射、设置、别名），以及本篇对索引的特殊管理（状态、存储）。")]),t._v(" "),s("p",[t._v("接下来我们将对最核心的搜索相关 API 进行介绍，毕竟 Elasticsearch 离不开的，就是一个 "),s("strong",[t._v("搜索/search")]),t._v("。")])])}),[],!1,null,null,null);s.default=_.exports}}]);