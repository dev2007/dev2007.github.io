(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{405:function(t,e,s){"use strict";s.r(e);var i=s(1),a=Object(i.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("blockquote",[e("p",[t._v("本篇介绍通过git工具替换网站主题，并发布")])]),t._v(" "),e("h1",{attrs:{id:"jekyll和hexo的简要介绍"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jekyll和hexo的简要介绍"}},[t._v("#")]),t._v(" Jekyll和Hexo的简要介绍")]),t._v(" "),e("p",[t._v("  GitHub Pages是基于Jekyll构建的，Jekyll 是一个简单的博客形态的静态站点生产工具，它有一个模版目录，其中包含原始文本格式的文档，通过一个转换器（如 Markdown）和Liquid 渲染器，将我们的的原始文章（Markdown格式文件）转化成静态页面，将整个仓库的文件生成一个完整的可发布的静态网站，而不用手工去对每篇文章都写一个html页面。")]),t._v(" "),e("p",[t._v("  Jekyll依赖于Ruby，如果我们想在本地运行Jekyll，需要安装相应的依赖，而Hexo只依赖于Nodejs，相对要简单些，所以不少人选择使用Hexo来生成网站。")]),t._v(" "),e("blockquote",[e("p",[t._v("本文不介绍本地安装Jekyll和Hexo，因为本地安装的目的，是为了本地可运行、查看网站效果。我们只介绍如何生成Pages网站、如何使用现成的主题，并介绍如何写文章发布，不进行Jekyll主题开发，有需要的可自行研究学习。")])]),t._v(" "),e("h1",{attrs:{id:"jekyll主题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jekyll主题"}},[t._v("#")]),t._v(" Jekyll主题")]),t._v(" "),e("p",[t._v("  在互联网上有很多开源爱好者，发布了他们开发的Jekyll样式，我们如果不需要自行开发主题，可以选择别人的主题，稍微配置后，即可用于自己的博客。互联网上有很多Jekyll主题站，此处推荐一个"),e("a",{attrs:{href:"http://jekyllthemes.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("jekyllthemes"),e("OutboundLink")],1),t._v("。")]),t._v(" "),e("p",[e("img",{attrs:{src:"/assets/img/githubpages/themes.jpg",alt:"jekyllthemes示例"}})]),t._v(" "),e("ul",[e("li",[t._v("主题选择和下载")])]),t._v(" "),e("p",[t._v("在网站上，我们选择一个自己心仪的主题，点击进入详情页面，可以看到“Download”按钮，点击可进入下载页面。")]),t._v(" "),e("p",[e("img",{attrs:{src:"/assets/img/githubpages/themes2.jpg",alt:"jekyll主题选择"}})]),t._v(" "),e("p",[t._v("下载页面一般分为两种：")]),t._v(" "),e("ol",[e("li",[t._v("git仓库代码页面")]),t._v(" "),e("li",[t._v("git仓库发布页面")])]),t._v(" "),e("p",[t._v("代码页面，我们可以点击右上角的“Code”，如果本地电脑上安装有git插件，可以复制Https下载链接，然后在本地git上克隆仓库代码；如果没有，可以直接点击“Download ZIP”下载代码压缩文件。")]),t._v(" "),e("p",[e("img",{attrs:{src:"/assets/img/githubpages/themes3.jpg",alt:"jekyll主题下载1"}})]),t._v(" "),e("p",[t._v("发布页面，我们直接点击“Source code”下载源码即可。")]),t._v(" "),e("p",[e("img",{attrs:{src:"/assets/img/githubpages/themes4.jpg",alt:"jekyll主题下载2"}})]),t._v(" "),e("p",[t._v("以上两种方式都一样，我们得到别人开发的Jekyll主题代码。")]),t._v(" "),e("ul",[e("li",[t._v("主题使用")])]),t._v(" "),e("p",[t._v("由于下载的主题文件很多，不方便在GitHub网站上直接进行添加，我们需要在本地使用git工具将主题代码放进我们自己的仓库。")]),t._v(" "),e("h1",{attrs:{id:"安装主题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装主题"}},[t._v("#")]),t._v(" 安装主题")]),t._v(" "),e("blockquote",[e("p",[t._v("如果你熟悉git的安装和使用，安装及使用可直接跳过。此处我们选择最简单的Git工具进行介绍。")])]),t._v(" "),e("ul",[e("li",[t._v("GitHub官方Desktop安装")])]),t._v(" "),e("p",[t._v("官方介绍文档"),e("a",{attrs:{href:"https://docs.github.com/en/free-pro-team@latest/desktop/installing-and-configuring-github-desktop",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitHub Desktop Doc"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("官方下载链接"),e("a",{attrs:{href:"https://desktop.github.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitHub Desktop Download"),e("OutboundLink")],1)]),t._v(" "),e("ul",[e("li",[t._v("Git工具安装")])]),t._v(" "),e("p",[e("a",{attrs:{href:"https://git-scm.com/download/win",target:"_blank",rel:"noopener noreferrer"}},[t._v("下载链接"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("下载相应的安装程序后，安装git，安装完成后，鼠标右键菜单中就可以看到git相关菜单项。")]),t._v(" "),e("p",[e("img",{attrs:{src:"/assets/img/githubpages/git.jpg",alt:"git菜单"}})]),t._v(" "),e("ul",[e("li",[t._v("GitHub Pages仓库克隆")])]),t._v(" "),e("p",[t._v("回到我们的"),e("a",{attrs:{href:"https://github.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitHub"),e("OutboundLink")],1),t._v("页面，进入我们的Pages仓库页面。")]),t._v(" "),e("p",[e("img",{attrs:{src:"/assets/img/githubpages/git2.jpg",alt:"git仓库"}})]),t._v(" "),e("p",[t._v("点击“Code”，复制HTTPS链接。在本地电脑中，右键选择“Git GUI Here”，再选择“Clone Existing Repository”，将仓库代码克隆到本地。")]),t._v(" "),e("p",[e("img",{attrs:{src:"/assets/img/githubpages/git3.jpg",alt:"git仓库克隆"}})]),t._v(" "),e("p",[e("img",{attrs:{src:"/assets/img/githubpages/git4.jpg",alt:"git仓库克隆2"}})]),t._v(" "),e("p",[t._v("由于仓库中还有篇二中初始化时添加的文件，现在要使用下载的主题，进入仓库文件夹，先将之前的文件删除，如下图中的index.md和_config.yml文件（注意.git文件夹不可删除）。")]),t._v(" "),e("p",[e("img",{attrs:{src:"/assets/img/githubpages/git5.jpg",alt:"git仓库文件"}})]),t._v(" "),e("p",[t._v("原文件删除后，我们将之前下载的主题代码全部复制到文件夹中,然后右键“Git GUI Here”，准备提交代码。")]),t._v(" "),e("p",[e("img",{attrs:{src:"/assets/img/githubpages/git6.jpg",alt:"git添加主题文件"}})]),t._v(" "),e("p",[e("img",{attrs:{src:"/assets/img/githubpages/git7.jpg",alt:"git添加主题文件2"}})]),t._v(" "),e("p",[t._v("按下快捷键"),e("kbd",[t._v("Ctrl+I")]),t._v(",并在弹窗中确认，将当前文件添加，准备提交到仓库。")]),t._v(" "),e("p",[t._v('在右下角“Commit Message”里输入描述，然后点击“Commit”，再点击"Push"推送到GitHub网站上，如果需要账号和密码，输入即可。')]),t._v(" "),e("p",[e("img",{attrs:{src:"/assets/img/githubpages/git8.jpg",alt:"git添加主题文件"}})]),t._v(" "),e("p",[t._v("提交成功后，在GitHub仓库中将看到提交的新的主题代码，稍后即可通过域名访问到新的网站风格。")]),t._v(" "),e("p",[e("img",{attrs:{src:"/assets/img/githubpages/git9.jpg",alt:"pages新主题页面"}})]),t._v(" "),e("p",[e("em",[t._v("题图来源 ："),e("a",{attrs:{href:"https://unsplash.com/@doto",target:"_blank",rel:"noopener noreferrer"}},[t._v("unsplash @doto"),e("OutboundLink")],1)])])])}),[],!1,null,null,null);e.default=a.exports}}]);