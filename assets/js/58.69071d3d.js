(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{430:function(t,s,a){"use strict";a.r(s);var n=a(1),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("上篇中，我们初步观察了 RuoYi 的项目结构，并在最后实际运行起了项目。我们也发现了作者不好的代码习惯，作为反例，我们应该要养成良好的编码习惯。本篇开始，我们会按照 Web 界面逐一对具体子项目的实现的功能进行探秘。\n")]),t._v(" "),s("h2",{attrs:{id:"常见又不常见的登录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常见又不常见的登录"}},[t._v("#")]),t._v(" 常见又不常见的登录")]),t._v(" "),s("p",[t._v("在上一篇中，我们知道两个很重要的信息，一是 RuoYi 项目没有使用前后端分离，用的是 Thymeleaf 模板；二是权限框架选用的 Shiro。")]),t._v(" "),s("p",[t._v("没有前后端分离，说明登录以及其他业务的 API 响应，必定有一部分是针对 html 的响应，而非全部是 Restful API，落在具体的登录功能上，说明登录表单提交数据的 API，有可能响应的就直接一个 html 页面了。")]),t._v(" "),s("p",[t._v("而 Shiro 框架，说明我们对相关 RBAC 代码分析时，需要从 Shiro 框架的特点进行。")]),t._v(" "),s("p",[t._v("我们再次运行项目，并访问 "),s("code",[t._v("http://localhost")]),t._v("，进入登录界面后，按 F12 打开浏览器的开发人员工具，然后输入验证码，点击登录。接着我们观察工具的中的网络中的 XHR，然后发现调用了登录 API："),s("code",[t._v("http://localhost/login")]),t._v("，如图：")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/img/ruoyi/2/1.jpg",alt:"login"}})]),t._v(" "),s("p",[t._v("我们再看请求体，如图：")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/img/ruoyi/2/2.jpg",alt:"body"}})]),t._v(" "),s("p",[t._v("这里存在一个非常严重的问题！！密码明文传输，安全性很差！！如果我们要用 RuoYi 或者自己搭框架来做一些安全评级较高的项目，比如等保项目，很可能由于这个密码问题就直接被否定了。")]),t._v(" "),s("p",[t._v("解决方法：密码加密后传输，加密算法选用非对称的，如 RSA。进一步，传输协议调整为 https，顺便还对防止重放攻击。")]),t._v(" "),s("p",[t._v("另外，我们还发现这里传输了验证码，那验证码如何与当前登录绑定的？我们先验证一下是否可以进行验证码替换攻击。")]),t._v(" "),s("p",[t._v("我们在浏览器同时打开两个登录界面，两个登录界面分别有两个验证码，如图：")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/img/ruoyi/2/4.jpg",alt:"code"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/img/ruoyi/2/5.jpg",alt:"code"}})]),t._v(" "),s("p",[t._v("我们将第二个验证码答案填入第一个界面，看能否登录。直接登录成功了。说明验证码与当前登录操作可能只有会话绑定关系，只要是同一会话，就认为是同一个操作。我们再用两个不同的浏览器验证一下，这次就无法替换验证码登录了，说明验证码确实是只与会话绑定，后面我们再从代码中确认一次。")]),t._v(" "),s("p",[t._v("然后我们看一下登录成功后的前端逻辑，如图：")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/img/ruoyi/2/3.jpg",alt:"login success"}})]),t._v(" "),s("p",[t._v("可以看到 "),s("code",[t._v("/login")]),t._v(" 接口响应 "),s("code",[t._v("200")]),t._v(" 后，前端进入首页 "),s("code",[t._v("index")]),t._v("，说明前端是判定登录响应为 "),s("code",[t._v("200")]),t._v(" 后，再次访问 "),s("code",[t._v("index")]),t._v("，由于后台会话已记录登录状态，所以鉴权通过，访问返回首页的 html 内容。")]),t._v(" "),s("p",[t._v("为了解答验证码的问题以及更深入了解 RuoYi 项目的登录实现，我们进入代码进行探秘。")]),t._v(" "),s("h2",{attrs:{id:"神秘的验证码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#神秘的验证码"}},[t._v("#")]),t._v(" 神秘的验证码")]),t._v(" "),s("p",[t._v("上面，我们已经知道登录入口 API 为 "),s("code",[t._v("/login")]),t._v("，那么只要找到该 API ，就可以找到入口深入 RuoYi。")]),t._v(" "),s("p",[t._v("Sping Boot 项目的话，推荐一个 IDEA 插件 "),s("code",[t._v("RestfulToolkit")]),t._v("，它可以很方便的搜索 API，要是没有工具的话，我们就只能用全局搜索法，来找我们想看的 API。")]),t._v(" "),s("p",[t._v("我们先找 "),s("code",[t._v("/login")]),t._v(" API，如图：")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/img/ruoyi/2/6.jpg",alt:"login"}})]),t._v(" "),s("p",[t._v("同时，我们也顺便展开的 RuoYi 的包结构，如图：")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/img/ruoyi/2/7.jpg",alt:"package"}})]),t._v(" "),s("p",[t._v("真的是辣眼睛。")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/img/ruoyi/2/8.jpg",alt:"package"}})]),t._v(" "),s("p",[t._v("一般工程实践中，我们会尽量用业务去划分包的结构，即同业务的在一个包里，更细的划分在用子包体现。而不会像 RuoYi 这样将一大堆可能业务相近的 Controller 扔同一个包里就完了，区分度再用类名去区分。这样其实很让人头疼。")]),t._v(" "),s("p",[t._v("我们继续分析 "),s("code",[t._v("/login")]),t._v("。")]),t._v(" "),s("p",[t._v("首先，我们看到这个 Controller 有比较多的 JavaDoc 注释和代码注释，这个很好，能够方便别人理解代码。但是 API 所对应的 Controller 函数却没有注释，直接懵逼，算了，我们接着分析代码。")]),t._v(" "),s("p",[s("code",[t._v("GET /login")]),t._v(" 所对应的函数参数有三个： "),s("code",[t._v("HttpServletRequest request")]),t._v("、"),s("code",[t._v("HttpServletResponse response")]),t._v(" 和 "),s("code",[t._v("ModelMap mmap")]),t._v("，这个 "),s("code",[t._v("mmap")]),t._v(" 是个啥玩意？我们点进他的定义 "),s("code",[t._v("ModelMap")]),t._v(" 里，原来这个是用的 "),s("code",[t._v("Spring Context")]),t._v("。下载源码，看下官方类的说明写的啥，如图9：")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/img/ruoyi/2/9.jpg",alt:"code"}})]),t._v(" "),s("p",[t._v("原文如下：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * Implementation of {@link java.util.Map} for use when building model data for use\n * with UI tools. Supports chained calls and generation of model attribute names.\n *\n * <p>This class serves as generic model holder for Servlet MVC but is not tied to it.\n * Check out the {@link Model} interface for an interface variant.\n *\n * @author Rob Harrop\n * @author Juergen Hoeller\n * @since 2.0\n * @see Conventions#getVariableName\n * @see org.springframework.web.servlet.ModelAndView\n */")]),t._v("\n")])])]),s("p",[t._v("可以看到，意思是 "),s("code",[t._v("ModelMap")]),t._v(" 是标准库中 "),s("code",[t._v("Map")]),t._v(" 的一个实现，用于使用 UI 工具构造 model 数据。也就是说这个是结合 html 网页的模型数据传输所使用的。")]),t._v(" "),s("p",[t._v("我们再看 "),s("code",[t._v("POST /login")]),t._v("函数，如图：")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/img/ruoyi/2/10.jpg",alt:"method"}})]),t._v(" "),s("p",[t._v("函数有三个参数 "),s("code",[t._v("String username")]),t._v("、"),s("code",[t._v("String password")]),t._v(" 和 "),s("code",[t._v("Boolean rememberMe")]),t._v("，分别对应的是：用户名、用户密码和是否记住我。并没有验证码相关的参数。是否说明验证码没有通过后台校验，或者它在哪里被校验的呢？")]),t._v(" "),s("p",[t._v("我们试验一下。")]),t._v(" "),s("p",[t._v("第一步，我们先故意输错验证码登录，然后观察响应体，再通过响应体的关键数据搜索代码中的实现。")]),t._v(" "),s("p",[t._v("验证码错误时，响应体如图：")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/img/ruoyi/2/11.jpg",alt:"body"}})]),t._v(" "),s("p",[t._v("我们可以看到关键报错信息为“验证码错误”，通过这几个汉字我们找到定义，如图：")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/img/ruoyi/2/12.jpg",alt:"error"}})]),t._v(" "),s("p",[t._v("然后我们搜索对应的常量定义，找到使用处，如图：")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/img/ruoyi/2/13.jpg",alt:"code"}})]),t._v(" "),s("p",[t._v("图中，我们就可以看到判断代码：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ShiroConstants")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CAPTCHA_ERROR")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("equals")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ServletUtils")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getRequest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getAttribute")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ShiroConstants")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CURRENT_CAPTCHA")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("这里判定的是如果 request 的 attribute 里 键值为 "),s("code",[t._v("captcha")]),t._v("（对应常量为 "),s("code",[t._v("CURRENT_CAPTCHA")]),t._v("）的值，是否为 "),s("code",[t._v("captchaError")]),t._v("（常量为 "),s("code",[t._v("CAPTCHA_ERROR")]),t._v("）。如果是，则说明验证码有问题。")]),t._v(" "),s("p",[t._v("看一下此方法被调用的地方，如图：")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/img/ruoyi/2/14.jpg",alt:"call"}})]),t._v(" "),s("p",[t._v("证明确实是登录才判断的验证码是否校验通过。那么 "),s("code",[t._v("captcha")]),t._v(" 是在什么时候被设置的值呢？我们再搜索一下它的常量定义。")]),t._v(" "),s("p",[t._v("然后我们找到了类 "),s("code",[t._v("CaptchaValidateFilter")]),t._v("，然后看到了实现：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("onAccessDenied")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ServletRequest")]),t._v(" request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ServletResponse")]),t._v(" response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setAttribute")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ShiroConstants")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CURRENT_CAPTCHA")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ShiroConstants")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CAPTCHA_ERROR")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("再观察，发现此类是继承自 Shiro 的 "),s("code",[t._v("AccessControlFilter")]),t._v("，用于验证码校验的过滤器。")]),t._v(" "),s("p",[t._v("然后我们查找校验代码，发现如下：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("validateResponse")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HttpServletRequest")]),t._v(" request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" validateCode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ShiroUtils")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSession")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getAttribute")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Constants")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("KAPTCHA_SESSION_KEY")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" code "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("valueOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 验证码清除，防止多次使用。")]),t._v("\n    request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSession")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("removeAttribute")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Constants")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("KAPTCHA_SESSION_KEY")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringUtils")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isEmpty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("validateCode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("validateCode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("equalsIgnoreCase")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("code"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("这里我们可以看到，对验证码的判断，原始数据是从 attribute 里获取的，键值对应的常量为 "),s("code",[t._v("KAPTCHA_SESSION_KEY")]),t._v("，我们再查找一下它生成的地方，找到类 "),s("code",[t._v("SysCaptchaController")]),t._v("，然后看到代码如图：")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/img/ruoyi/2/15.jpg",alt:"controller"}})]),t._v(" "),s("p",[t._v("可以看到该函数对应的 API 为 "),s("code",[t._v("/captchaImage")]),t._v("，正好就是界面上生成验证码图片所调用的 API。我们观察一下此 API。哎……")]),t._v(" "),s("p",[t._v("代码中使用了大量明文字符串，而非常量字符串，非常……非常……难受。但凡有一点代码洁癖的，还是最好把这些常见的字符串定义为常量，或者使用工具组件中已定义好的枚举、常量。要不然别人会说你的代码写得好土。")]),t._v(" "),s("p",[t._v("我们可以看到此处验证码为数学模式式时，生成校验码的方法为 "),s("code",[t._v("String capText = captchaProducerMath.createText();")]),t._v("，然后后面的代码会将代码分割为公式部分和结果部分，公式部分生成图片响应前端，结果部分存储到 attribute 中用于判断是否正确。")]),t._v(" "),s("p",[t._v("以上代码分析后，整个验证码的生成和比较就比较清晰了。整理如下：\n1.用户未登录状态，调用 "),s("code",[t._v("/captchaImage")]),t._v("，生成验证码图片，并将验证码正确结果放入 request 的 attribute 中，键值为 "),s("code",[t._v("KAPTCHA_SESSION_KEY")]),t._v("\n2.用户点击登录，调用 "),s("code",[t._v("/login")]),t._v(" 传递数据，包括用户名、密码、验证码、是否记住用户\n3.拦截器 "),s("code",[t._v("CaptchaValidateFilter")]),t._v(" 会先读取 "),s("code",[t._v("/login")]),t._v(" 传入的验证码，并与 attribute 中的 "),s("code",[t._v("KAPTCHA_SESSION_KEY")]),t._v(" 进行比较，如果相同，验证码正确，否则验证码错误，并同时清理已记录的 attribute "),s("code",[t._v("KAPTCHA_SESSION_KEY")]),t._v("；然后会在 attribute 中添加一个头 "),s("code",[t._v("captcha")]),t._v("，用于记录验证码校验结果\n4."),s("code",[t._v("/loign")]),t._v(" 对应的方法会调用登录代码 "),s("code",[t._v("subject.login(token);")]),t._v(",会触发 "),s("code",[t._v("UserRealm")]),t._v(" 中的认证方法 "),s("code",[t._v("doGetAuthenticationInfo()")]),t._v("，会调用 "),s("code",[t._v("SysLoginService")]),t._v(" 的方法 "),s("code",[t._v("login(String username, String password)")]),t._v(" 进行用户认证，而其中就会先进行验证码的判定\n5.从 attribute 里读取验证码校验结果的键值 "),s("code",[t._v("captcha")]),t._v("，如果对应的值为 "),s("code",[t._v("captchaError")]),t._v("，则说明验证码不对，就不会再进行用户名、密码的判断了")]),t._v(" "),s("p",[t._v("我们最开始有疑问的验证码校验，到此得到了答案。")]),t._v(" "),s("h2",{attrs:{id:"奇怪的逻辑"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#奇怪的逻辑"}},[t._v("#")]),t._v(" 奇怪的逻辑")]),t._v(" "),s("p",[t._v("从上面我们知道，其实最终对用户认证相关信息的判断都落在 "),s("code",[t._v("UserRealm")]),t._v("，这是 Shiro 框架中认证相关的类，暂不详细展开，在这个类里面，各种认证情况都以异常形式抛出，代码如下：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    user "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" loginService"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("login")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("username"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" password"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CaptchaException")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AuthenticationException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getMessage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserNotExistsException")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UnknownAccountException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getMessage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserPasswordNotMatchException")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IncorrectCredentialsException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getMessage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserPasswordRetryLimitExceedException")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ExcessiveAttemptsException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getMessage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserBlockedException")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LockedAccountException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getMessage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RoleBlockedException")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LockedAccountException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getMessage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"对用户["')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" username "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"]进行登录验证..验证未通过{}"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getMessage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AuthenticationException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getMessage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("但是最奇怪的是，RuoYi 的作者在 "),s("code",[t._v("login()")]),t._v(" 方法中针对各种认证失败的情况抛出了各种异常，然后又在 "),s("code",[t._v("UserRealm")]),t._v(" 捕获这些异常后，再抛出其他的异常，最后又依据这些异常共同的父类来决定响应的错误数据。")]),t._v(" "),s("p",[t._v("这就像给一个孩子穿了件红色外套，然后走到门外，又给孩子加了件绿色外套，最后判断孩子的情况，又是通过外套是毛衣来判断。真让人摸不着头脑。")]),t._v(" "),s("p",[t._v("一般情况下，我们有两种实现策略。第一种，针对没的认证失败情况，以不同的异常抛出，那么就会有一个处理异常的顶层设计，通过不同的异常，返回不同的响应信息，在 Spring Boot 框架中，这个异常处理的顶层设计就是 "),s("code",[t._v("@ControllerAdvice")]),t._v("，所有异常都可以在这里处理。")]),t._v(" "),s("p",[t._v("第二种，我们直接在 "),s("code",[t._v("Controller")]),t._v(" 中捕获异常，直接返回不同的响应信息即可。")]),t._v(" "),s("p",[t._v("像 RuoYi 作者这种，把以上两种情况结合起来，又在中间多包装一层异常的设计，就显得既臃肿又复杂，不可取。")]),t._v(" "),s("h2",{attrs:{id:"原材料从哪里来"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原材料从哪里来"}},[t._v("#")]),t._v(" 原材料从哪里来")]),t._v(" "),s("p",[t._v("在验证码探秘的过程中，我们也基本理清了登录的逻辑，但我们还没有看到用户和密码是如何校验的，我们在上面逻辑中找一下相关逻辑。")]),t._v(" "),s("p",[t._v("我们先在 "),s("code",[t._v("SysLoginService")]),t._v(" 中的 "),s("code",[t._v("login()")]),t._v(" 中看到以下代码：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 密码如果不在指定范围内 错误")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("password"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("length")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserConstants")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PASSWORD_MIN_LENGTH")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" password"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("length")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserConstants")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PASSWORD_MAX_LENGTH")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AsyncManager")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("me")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("execute")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AsyncFactory")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("recordLogininfor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("username"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Constants")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("LOGIN_FAIL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MessageUtils")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("message")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"user.password.not.match"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserPasswordNotMatchException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 用户名不在指定范围内 错误")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("username"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("length")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserConstants")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("USERNAME_MIN_LENGTH")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" username"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("length")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserConstants")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("USERNAME_MAX_LENGTH")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AsyncManager")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("me")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("execute")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AsyncFactory")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("recordLogininfor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("username"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Constants")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("LOGIN_FAIL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MessageUtils")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("message")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"user.password.not.match"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserPasswordNotMatchException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("这段代码，判断了密码长度，不在长度范围内的密码，直接判定无效。但一般情况下，密码相关的复杂度判断，我们一般会采用密码策略的设计，提供一个用户可配置的策略，其中就会有密码长度的配置项。然后在这种判断密码长度时，读取密码长度配置项，再进行判断即可。用户名也类似的逻辑。")]),t._v(" "),s("p",[t._v("像作者这种直接将逻辑写死的情况，灵活性非常差，后期如果用户想自定义密码长度时，又需要修改代码，不建议像 RuoYi 作者这样实现。")]),t._v(" "),s("p",[t._v("接着，代码查询用户信息：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 查询用户信息")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SysUser")]),t._v(" user "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" userService"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("selectUserByLoginName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("username"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("然后对用户的可用性状态判断，接着进行了密码校验，如下：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("passwordService"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("validate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" password"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("跟踪到这个实现里，忽略其他逻辑，发现密码校验函数为 "),s("code",[t._v("matches(SysUser user, String newPassword)")]),t._v("，其实现为如下：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPassword")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("equals")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("encryptPassword")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getLoginName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" newPassword"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSalt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("这段代码，可以明确的看出来就是将登录的数据，加盐后，再加密，然后与记录中的用户密码数据进行比较。我们再看一下 "),s("code",[t._v("encryptPassword")]),t._v(" 的实现：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Md5Hash")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("loginName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" password "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" salt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toHex")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("也就是存储的密码数据不是加密数据，而是用户名加上密码再加上盐，最后用 "),s("code",[t._v("MD5")]),t._v(" 得到哈希值。并且我们也知道，用户创建时，存储的数据中，除了基本的用户名、用户密码等信息，还包括给用户的盐值。")]),t._v(" "),s("p",[t._v("我们大概找一下这个盐值的生成方式，代码如下：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("/**\n * 生成随机盐\n */\npublic static String "),s("span",{pre:!0,attrs:{class:"token function-name function"}},[t._v("randomSalt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    // 一个Byte占两个字节，此处生成的3字节，字符串长度为6\n    SecureRandomNumberGenerator secureRandom "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" new SecureRandomNumberGenerator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    String hex "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" secureRandom.nextBytes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(".toHex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("return")]),t._v(" hex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"小结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),s("p",[t._v("本篇分析了用户的基本登录流程，了解到 RuoYi 作者没有考虑密码传输的安全性，对异常的处理不是很清爽，也知道了作者没有设计密码策略相关配置，相关的配置非常不灵活。而且可以复用的的字符串也应该抽离为常量，这些在我们做项目时都应该尽量避免。")]),t._v(" "),s("p",[t._v("另外，我们也看到，作者对用户密码的存储，使用了比较安全的算法，不仅加了盐，还使用 "),s("code",[t._v("MD5")]),t._v(" 进行哈希，这点可以提升安全性，值得学习。")]),t._v(" "),s("p",[t._v("下一篇，我们会继续再展开一些关于 Shiro 框架认证相关的逻辑。本篇就到这里，比心，❤。")])])}),[],!1,null,null,null);s.default=e.exports}}]);